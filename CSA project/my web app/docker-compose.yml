version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: secure_webapp_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-secure_root_password}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-nazzys_thrift_shop}
      MYSQL_USER: ${MYSQL_USER:-webapp_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-secure_password}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database_setup.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "3306:3306"
    networks:
      - secure_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    container_name: secure_webapp_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-secure_redis_password}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - secure_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      timeout: 3s
      retries: 5

  # Web Application
  webapp:
    build: .
    container_name: secure_webapp
    restart: unless-stopped
    environment:
      - DB_HOST=mysql
      - DB_NAME=${MYSQL_DATABASE:-nazzys_thrift_shop}
      - DB_USER=${MYSQL_USER:-webapp_user}
      - DB_PASS=${MYSQL_PASSWORD:-secure_password}
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD:-secure_redis_password}
      - APP_ENV=${APP_ENV:-production}
      - APP_DEBUG=${APP_DEBUG:-false}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./logs:/var/www/html/logs
      - ./uploads:/var/www/html/uploads
      - ./ssl:/etc/ssl/certs
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - secure_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (optional, for SSL termination)
  nginx:
    image: nginx:alpine
    container_name: secure_webapp_nginx
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - webapp
    networks:
      - secure_network
    profiles:
      - proxy

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  secure_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
